name: Voicy MP3 Downloader

on:
  schedule:
    - cron: '0 * * * *'  # 毎時0分に実行
  workflow_dispatch:  # 手動実行用

# 明示的に権限を設定
permissions:
  contents: write
  actions: write

jobs:
  voicy-mp3-download:
    runs-on: ubuntu-latest
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v3
      
      - name: Python 3.10 セットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Chrome ブラウザのセットアップ
        uses: browser-actions/setup-chrome@v1
      
      - name: FFmpegのインストール
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          ffmpeg -version
      
      - name: 依存関係のインストール
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 selenium webdriver-manager
      
      - name: Voicy MP3ダウンロードスクリプト作成
        run: |
          # ヒアドキュメント構文を避け、複数のechoコマンドでファイルを作成
          echo 'import os' > voicy_mp3_downloader.py
          echo 'import re' >> voicy_mp3_downloader.py
          echo 'import json' >> voicy_mp3_downloader.py
          echo 'import requests' >> voicy_mp3_downloader.py
          echo 'import subprocess' >> voicy_mp3_downloader.py
          echo 'from datetime import datetime' >> voicy_mp3_downloader.py
          echo 'from bs4 import BeautifulSoup' >> voicy_mp3_downloader.py
          echo 'import traceback' >> voicy_mp3_downloader.py
          echo 'import time' >> voicy_mp3_downloader.py
          echo 'import shutil' >> voicy_mp3_downloader.py
          echo 'from selenium import webdriver' >> voicy_mp3_downloader.py
          echo 'from selenium.webdriver.chrome.options import Options' >> voicy_mp3_downloader.py
          echo 'from selenium.webdriver.chrome.service import Service' >> voicy_mp3_downloader.py
          echo 'from selenium.webdriver.common.by import By' >> voicy_mp3_downloader.py
          echo 'from selenium.webdriver.support.ui import WebDriverWait' >> voicy_mp3_downloader.py
          echo 'from selenium.webdriver.support import expected_conditions as EC' >> voicy_mp3_downloader.py
          echo 'from webdriver_manager.chrome import ChromeDriverManager' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo '# 設定' >> voicy_mp3_downloader.py
          echo 'MP3_DIR = "mp3_downloads"  # MP3保存ディレクトリ' >> voicy_mp3_downloader.py
          echo 'TEMP_DIR = "temp_segments"  # 一時ファイル用ディレクトリ' >> voicy_mp3_downloader.py
          echo 'DEBUG_DIR = "debug_files"  # デバッグファイル用ディレクトリ' >> voicy_mp3_downloader.py
          echo 'JSON_FILE = "output/voicy_urls_only.json"  # URLリストのJSONファイル' >> voicy_mp3_downloader.py
          echo 'DOWNLOAD_HISTORY_FILE = "download_history.json"  # ダウンロード履歴ファイル' >> voicy_mp3_downloader.py
          echo 'MAX_DOWNLOADS_PER_RUN = 10  # 1回の実行でダウンロードする最大件数' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'def setup_directories():' >> voicy_mp3_downloader.py
          echo '    """必要なディレクトリを作成"""' >> voicy_mp3_downloader.py
          echo '    for directory in [MP3_DIR, TEMP_DIR, DEBUG_DIR]:' >> voicy_mp3_downloader.py
          echo '        os.makedirs(directory, exist_ok=True)' >> voicy_mp3_downloader.py
          echo '        print(f"ディレクトリを確認/作成しました: {directory}")' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'def load_download_history():' >> voicy_mp3_downloader.py
          echo '    """ダウンロード履歴を読み込む"""' >> voicy_mp3_downloader.py
          echo '    if os.path.exists(DOWNLOAD_HISTORY_FILE):' >> voicy_mp3_downloader.py
          echo '        try:' >> voicy_mp3_downloader.py
          echo '            with open(DOWNLOAD_HISTORY_FILE, "r") as f:' >> voicy_mp3_downloader.py
          echo '                return json.load(f)' >> voicy_mp3_downloader.py
          echo '        except Exception as e:' >> voicy_mp3_downloader.py
          echo '            print(f"履歴ファイルの読み込みエラー: {e}")' >> voicy_mp3_downloader.py
          echo '            return []' >> voicy_mp3_downloader.py
          echo '    return []' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'def save_download_history(history):' >> voicy_mp3_downloader.py
          echo '    """ダウンロード履歴を保存する"""' >> voicy_mp3_downloader.py
          echo '    try:' >> voicy_mp3_downloader.py
          echo '        with open(DOWNLOAD_HISTORY_FILE, "w") as f:' >> voicy_mp3_downloader.py
          echo '            json.dump(history, f, indent=2)' >> voicy_mp3_downloader.py
          echo '    except Exception as e:' >> voicy_mp3_downloader.py
          echo '        print(f"履歴ファイルの保存エラー: {e}")' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'def load_urls_from_json():' >> voicy_mp3_downloader.py
          echo '    """JSONファイルからURLリストを読み込む"""' >> voicy_mp3_downloader.py
          echo '    try:' >> voicy_mp3_downloader.py
          echo '        with open(JSON_FILE, "r") as f:' >> voicy_mp3_downloader.py
          echo '            return json.load(f)' >> voicy_mp3_downloader.py
          echo '    except Exception as e:' >> voicy_mp3_downloader.py
          echo '        print(f"JSONファイルの読み込みエラー: {e}")' >> voicy_mp3_downloader.py
          echo '        return []' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'def get_episode_info(url):' >> voicy_mp3_downloader.py
          echo '    """Voicyエピソードページから情報を取得"""' >> voicy_mp3_downloader.py
          echo '    print(f"::group::エピソード情報取得: {url}")' >> voicy_mp3_downloader.py
          echo '    try:' >> voicy_mp3_downloader.py
          echo '        # Chromeのオプション設定' >> voicy_mp3_downloader.py
          echo '        chrome_options = Options()' >> voicy_mp3_downloader.py
          echo '        chrome_options.add_argument("--headless")' >> voicy_mp3_downloader.py
          echo '        chrome_options.add_argument("--no-sandbox")' >> voicy_mp3_downloader.py
          echo '        chrome_options.add_argument("--disable-dev-shm-usage")' >> voicy_mp3_downloader.py
          echo '        chrome_options.add_argument("--disable-gpu")' >> voicy_mp3_downloader.py
          echo '        chrome_options.add_argument("--window-size=1920,1080")' >> voicy_mp3_downloader.py
          echo '        chrome_options.add_argument("--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36")' >> voicy_mp3_downloader.py
          echo '        # WebDriverの初期化' >> voicy_mp3_downloader.py
          echo '        service = Service(ChromeDriverManager().install())' >> voicy_mp3_downloader.py
          echo '        driver = webdriver.Chrome(service=service, options=chrome_options)' >> voicy_mp3_downloader.py
          echo '        driver.get(url)' >> voicy_mp3_downloader.py
          echo '        # ページが完全に読み込まれるまで待機' >> voicy_mp3_downloader.py
          echo '        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "h1.title")))' >> voicy_mp3_downloader.py
          echo '        # エピソードID' >> voicy_mp3_downloader.py
          echo '        episode_id = url.split("/")[-1]' >> voicy_mp3_downloader.py
          echo '        # タイトル取得' >> voicy_mp3_downloader.py
          echo '        title_element = driver.find_element(By.CSS_SELECTOR, "h1.title")' >> voicy_mp3_downloader.py
          echo '        title = title_element.text.strip()' >> voicy_mp3_downloader.py
          echo '        # 日付取得' >> voicy_mp3_downloader.py
          echo '        date_element = driver.find_element(By.CSS_SELECTOR, "p.date")' >> voicy_mp3_downloader.py
          echo '        date_text = date_element.text.strip()' >> voicy_mp3_downloader.py
          echo '        # 日付フォーマット変換（例: 2023年2月1日 → 202302）' >> voicy_mp3_downloader.py
          echo '        date_match = re.search(r"(\d{4})年(\d{1,2})月(\d{1,2})日", date_text)' >> voicy_mp3_downloader.py
          echo '        if date_match:' >> voicy_mp3_downloader.py
          echo '            year, month, day = date_match.groups()' >> voicy_mp3_downloader.py
          echo '            formatted_date = f"{year}{month.zfill(2)}"' >> voicy_mp3_downloader.py
          echo '        else:' >> voicy_mp3_downloader.py
          echo '            formatted_date = datetime.now().strftime("%Y%m")' >> voicy_mp3_downloader.py
          echo '        # 有料放送かどうかを確認' >> voicy_mp3_downloader.py
          echo '        is_premium = False' >> voicy_mp3_downloader.py
          echo '        try:' >> voicy_mp3_downloader.py
          echo '            premium_elements = driver.find_elements(By.CSS_SELECTOR, ".premium-episode")' >> voicy_mp3_downloader.py
          echo '            if premium_elements:' >> voicy_mp3_downloader.py
          echo '                is_premium = True' >> voicy_mp3_downloader.py
          echo '        except:' >> voicy_mp3_downloader.py
          echo '            pass' >> voicy_mp3_downloader.py
          echo '        # MP3 URLを取得' >> voicy_mp3_downloader.py
          echo '        mp3_url = None' >> voicy_mp3_downloader.py
          echo '        try:' >> voicy_mp3_downloader.py
          echo '            # オーディオプレーヤーのソースを探す' >> voicy_mp3_downloader.py
          echo '            audio_elements = driver.find_elements(By.TAG_NAME, "audio")' >> voicy_mp3_downloader.py
          echo '            if audio_elements:' >> voicy_mp3_downloader.py
          echo '                mp3_url = audio_elements[0].get_attribute("src")' >> voicy_mp3_downloader.py
          echo '            # ソースが見つからない場合はページソースから探す' >> voicy_mp3_downloader.py
          echo '            if not mp3_url:' >> voicy_mp3_downloader.py
          echo '                page_source = driver.page_source' >> voicy_mp3_downloader.py
          echo '                soup = BeautifulSoup(page_source, "html.parser")' >> voicy_mp3_downloader.py
          echo '                audio_tags = soup.find_all("audio")' >> voicy_mp3_downloader.py
          echo '                for audio in audio_tags:' >> voicy_mp3_downloader.py
          echo '                    if audio.has_attr("src"):' >> voicy_mp3_downloader.py
          echo '                        mp3_url = audio["src"]' >> voicy_mp3_downloader.py
          echo '                        break' >> voicy_mp3_downloader.py
          echo '        except Exception as e:' >> voicy_mp3_downloader.py
          echo '            print(f"MP3 URL取得エラー: {e}")' >> voicy_mp3_downloader.py
          echo '        driver.quit()' >> voicy_mp3_downloader.py
          echo '        # 結果を返す' >> voicy_mp3_downloader.py
          echo '        result = {' >> voicy_mp3_downloader.py
          echo '            "id": episode_id,' >> voicy_mp3_downloader.py
          echo '            "title": title,' >> voicy_mp3_downloader.py
          echo '            "date": formatted_date,' >> voicy_mp3_downloader.py
          echo '            "mp3_url": mp3_url,' >> voicy_mp3_downloader.py
          echo '            "is_premium": is_premium,' >> voicy_mp3_downloader.py
          echo '            "url": url' >> voicy_mp3_downloader.py
          echo '        }' >> voicy_mp3_downloader.py
          echo '        print(f"エピソード情報: {result}")' >> voicy_mp3_downloader.py
          echo '        print(f"::endgroup::")' >> voicy_mp3_downloader.py
          echo '        return result' >> voicy_mp3_downloader.py
          echo '    except Exception as e:' >> voicy_mp3_downloader.py
          echo '        print(f"エピソード情報取得エラー: {e}")' >> voicy_mp3_downloader.py
          echo '        traceback.print_exc()' >> voicy_mp3_downloader.py
          echo '        print(f"::endgroup::")' >> voicy_mp3_downloader.py
          echo '        return None' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'def download_episode(episode_info):' >> voicy_mp3_downloader.py
          echo '    """エピソード情報からMP3をダウンロード"""' >> voicy_mp3_downloader.py
          echo '    if not episode_info or not episode_info.get("mp3_url"):' >> voicy_mp3_downloader.py
          echo '        print(f"ダウンロード可能なMP3 URLがありません")' >> voicy_mp3_downloader.py
          echo '        return None' >> voicy_mp3_downloader.py
          echo '    episode_id = episode_info["id"]' >> voicy_mp3_downloader.py
          echo '    title = episode_info["title"]' >> voicy_mp3_downloader.py
          echo '    date = episode_info["date"]' >> voicy_mp3_downloader.py
          echo '    mp3_url = episode_info["mp3_url"]' >> voicy_mp3_downloader.py
          echo '    is_premium = episode_info.get("is_premium", False)' >> voicy_mp3_downloader.py
          echo '    print(f"::group::エピソード {episode_id} のダウンロード")' >> voicy_mp3_downloader.py
          echo '    print(f"タイトル: {title}")' >> voicy_mp3_downloader.py
          echo '    print(f"日付: {date}")' >> voicy_mp3_downloader.py
          echo '    print(f"MP3 URL: {mp3_url}")' >> voicy_mp3_downloader.py
          echo '    print(f"有料放送: {\'はい\' if is_premium else \'いいえ\'}")' >> voicy_mp3_downloader.py
          echo '    # ファイル名を作成（特殊文字を置換）' >> voicy_mp3_downloader.py
          echo '    safe_title = re.sub(r"[\\\\/*?:\\"<>|]", "_", title)' >> voicy_mp3_downloader.py
          echo '    # ファイル名の形式: 年月_タイトル_ID.mp3' >> voicy_mp3_downloader.py
          echo '    filename = f"{date}_{safe_title}_{episode_id}.mp3"' >> voicy_mp3_downloader.py
          echo '    if is_premium:' >> voicy_mp3_downloader.py
          echo '        filename = f"_{date}_{safe_title}_{episode_id}.mp3"' >> voicy_mp3_downloader.py
          echo '    mp3_path = os.path.join(MP3_DIR, filename)' >> voicy_mp3_downloader.py
          echo '    try:' >> voicy_mp3_downloader.py
          echo '        # MP3をダウンロード' >> voicy_mp3_downloader.py
          echo '        print(f"MP3ダウンロード中: {mp3_url}")' >> voicy_mp3_downloader.py
          echo '        response = requests.get(mp3_url, stream=True)' >> voicy_mp3_downloader.py
          echo '        if response.status_code == 200:' >> voicy_mp3_downloader.py
          echo '            with open(mp3_path, "wb") as f:' >> voicy_mp3_downloader.py
          echo '                for chunk in response.iter_content(chunk_size=8192):' >> voicy_mp3_downloader.py
          echo '                    if chunk:' >> voicy_mp3_downloader.py
          echo '                        f.write(chunk)' >> voicy_mp3_downloader.py
          echo '            # ファイルサイズを確認' >> voicy_mp3_downloader.py
          echo '            file_size = os.path.getsize(mp3_path)' >> voicy_mp3_downloader.py
          echo '            print(f"ダウンロード完了: {mp3_path} (サイズ: {file_size / (1024 * 1024):.2f}MB)")' >> voicy_mp3_downloader.py
          echo '            if file_size > 0:' >> voicy_mp3_downloader.py
          echo '                print(f"エピソード {episode_id} のダウンロードに成功しました: {mp3_path}")' >> voicy_mp3_downloader.py
          echo '                print(f"::endgroup::")' >> voicy_mp3_downloader.py
          echo '                return mp3_path' >> voicy_mp3_downloader.py
          echo '            else:' >> voicy_mp3_downloader.py
          echo '                print(f"ダウンロードしたファイルのサイズが0です")' >> voicy_mp3_downloader.py
          echo '                os.remove(mp3_path)' >> voicy_mp3_downloader.py
          echo '                print(f"::endgroup::")' >> voicy_mp3_downloader.py
          echo '                return None' >> voicy_mp3_downloader.py
          echo '        else:' >> voicy_mp3_downloader.py
          echo '            print(f"MP3ダウンロードエラー: ステータスコード {response.status_code}")' >> voicy_mp3_downloader.py
          echo '            print(f"::endgroup::")' >> voicy_mp3_downloader.py
          echo '            return None' >> voicy_mp3_downloader.py
          echo '    except Exception as e:' >> voicy_mp3_downloader.py
          echo '        print(f"MP3ダウンロードエラー: {e}")' >> voicy_mp3_downloader.py
          echo '        traceback.print_exc()' >> voicy_mp3_downloader.py
          echo '        print(f"::endgroup::")' >> voicy_mp3_downloader.py
          echo '        return None' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'def main():' >> voicy_mp3_downloader.py
          echo '    """メイン処理"""' >> voicy_mp3_downloader.py
          echo '    print("Voicy MP3ダウンローダーを開始します")' >> voicy_mp3_downloader.py
          echo '    # 必要なディレクトリを作成' >> voicy_mp3_downloader.py
          echo '    setup_directories()' >> voicy_mp3_downloader.py
          echo '    # ダウンロード履歴を読み込む' >> voicy_mp3_downloader.py
          echo '    download_history = load_download_history()' >> voicy_mp3_downloader.py
          echo '    downloaded_ids = set(item["id"] for item in download_history)' >> voicy_mp3_downloader.py
          echo '    # URLリストを読み込む' >> voicy_mp3_downloader.py
          echo '    urls = load_urls_from_json()' >> voicy_mp3_downloader.py
          echo '    if not urls:' >> voicy_mp3_downloader.py
          echo '        print("URLリストが空です。処理を終了します。")' >> voicy_mp3_downloader.py
          echo '        return' >> voicy_mp3_downloader.py
          echo '    print(f"URLリストから{len(urls)}件のエピソードを読み込みました")' >> voicy_mp3_downloader.py
          echo '    # 未ダウンロードのURLをフィルタリング' >> voicy_mp3_downloader.py
          echo '    undownloaded_urls = []' >> voicy_mp3_downloader.py
          echo '    for url in urls:' >> voicy_mp3_downloader.py
          echo '        episode_id = url.split("/")[-1]' >> voicy_mp3_downloader.py
          echo '        if episode_id not in downloaded_ids:' >> voicy_mp3_downloader.py
          echo '            undownloaded_urls.append(url)' >> voicy_mp3_downloader.py
          echo '    print(f"未ダウンロードのエピソード: {len(undownloaded_urls)}件")' >> voicy_mp3_downloader.py
          echo '    # 最大ダウンロード数を制限' >> voicy_mp3_downloader.py
          echo '    urls_to_process = undownloaded_urls[:MAX_DOWNLOADS_PER_RUN]' >> voicy_mp3_downloader.py
          echo '    print(f"今回ダウンロードするエピソード: {len(urls_to_process)}件")' >> voicy_mp3_downloader.py
          echo '    # 各エピソードをダウンロード' >> voicy_mp3_downloader.py
          echo '    downloaded_files = []' >> voicy_mp3_downloader.py
          echo '    new_history_items = []' >> voicy_mp3_downloader.py
          echo '    for url in urls_to_process:' >> voicy_mp3_downloader.py
          echo '        episode_info = get_episode_info(url)' >> voicy_mp3_downloader.py
          echo '        if episode_info:' >> voicy_mp3_downloader.py
          echo '            mp3_file = download_episode(episode_info)' >> voicy_mp3_downloader.py
          echo '            if mp3_file:' >> voicy_mp3_downloader.py
          echo '                downloaded_files.append(mp3_file)' >> voicy_mp3_downloader.py
          echo '                new_history_items.append({' >> voicy_mp3_downloader.py
          echo '                    "id": episode_info["id"],' >> voicy_mp3_downloader.py
          echo '                    "title": episode_info["title"],' >> voicy_mp3_downloader.py
          echo '                    "date": episode_info["date"],' >> voicy_mp3_downloader.py
          echo '                    "file": os.path.basename(mp3_file),' >> voicy_mp3_downloader.py
          echo '                    "downloaded_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S")' >> voicy_mp3_downloader.py
          echo '                })' >> voicy_mp3_downloader.py
          echo '    # 履歴を更新' >> voicy_mp3_downloader.py
          echo '    if new_history_items:' >> voicy_mp3_downloader.py
          echo '        download_history.extend(new_history_items)' >> voicy_mp3_downloader.py
          echo '        save_download_history(download_history)' >> voicy_mp3_downloader.py
          echo '    # ダウンロード結果を表示' >> voicy_mp3_downloader.py
          echo '    print("\\n=== ダウンロード結果 ===")' >> voicy_mp3_downloader.py
          echo '    for i, item in enumerate(new_history_items, 1):' >> voicy_mp3_downloader.py
          echo '        print(f"{i}. ID: {item[\'id\']}")' >> voicy_mp3_downloader.py
          echo '        print(f"   タイトル: {item[\'title\']}")' >> voicy_mp3_downloader.py
          echo '        print(f"   ファイル: {item[\'file\']}")' >> voicy_mp3_downloader.py
          echo '        print(f"   ダウンロード日時: {item[\'downloaded_at\']}\\n")' >> voicy_mp3_downloader.py
          echo '    print(f"今回のダウンロード: {len(new_history_items)}個のMP3ファイル")' >> voicy_mp3_downloader.py
          echo '    print(f"合計ダウンロード済み: {len(download_history)}個のMP3ファイル")' >> voicy_mp3_downloader.py
          echo '    print("Voicy MP3ダウンローダーを終了します")' >> voicy_mp3_downloader.py
          
          echo '' >> voicy_mp3_downloader.py
          echo 'if __name__ == "__main__":' >> voicy_mp3_downloader.py
          echo '    main()' >> voicy_mp3_downloader.py
      
      - name: Voicy MP3ダウンロードの実行
        run: |
          # 出力ディレクトリの作成
          mkdir -p mp3_downloads
          
          # ダウンロード履歴ファイルの確認
          if [ ! -f download_history.json ]; then
            echo "[]" > download_history.json
          fi
          
          # スクリプトの実行
          python voicy_mp3_downloader.py
          
          # ダウンロードしたファイルの確認
          echo "ダウンロードしたMP3ファイル一覧:"
          ls -la mp3_downloads/
      
      - name: 変更をコミットしてプッシュ
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git add mp3_downloads/
          git add download_history.json
          
          # 変更があるかチェック
          if git diff --staged --quiet; then
            echo "変更はありません。コミットをスキップします。"
          else
            git commit -m "自動ダウンロード: $(date '+%Y-%m-%d %H:%M:%S')"
            git push
          fi
